//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.22 at 11:20:22 PM BST 
//


package com.mei.ergosurgeon.load.data.entities;

import com.mei.ergosurgeon.load.business.api.KafkaLoadService;
import com.mei.ergosurgeon.load.business.utils.AvroFilesUtil;
import com.mei.ergosurgeon.load.business.utils.KafkaTemplatesUtil;
import com.mei.ergosurgeon.load.data.entities.custom.KafkaTopic;
import org.springframework.kafka.core.KafkaTemplate;

import javax.xml.bind.annotation.*;
import java.io.File;

import static com.mei.ergosurgeon.load.common.IlegalStateExceptionEnum.AVRO_INDEX_RECORD_GET;
import static com.mei.ergosurgeon.load.common.IlegalStateExceptionEnum.AVRO_INDEX_RECORD_PUT;


@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "joint")
public class Joint implements KafkaTopic<Joint> {

    @XmlElement(required = true)
    protected String connector1;

    @XmlElement(required = true)
    protected String connector2;

    @XmlAttribute(name = "label", required = true)
    protected String label;

    public String getConnector1() {
        return connector1;
    }

    public void setConnector1(String value) {
        this.connector1 = value;
    }

    public String getConnector2() {
        return connector2;
    }

    public void setConnector2(String value) {
        this.connector2 = value;
    }

    public String getLabel() {
        return label;
    }

    public void setLabel(String value) {
        this.label = value;
    }

    public Joint process(KafkaLoadService proxy) throws Exception {

        proxy.send(this);
        /*
        connector1 = connector1.split("\\/")[0];
        connector2 = connector2.split("\\/")[0];

        //send(this);
        */
        return this;
    }

    @Override
    public String getTopic() {
        return "joint";
    }


    @Override
    public KafkaTemplate<Object, Joint> getKafkaTemplate() {
        return KafkaTemplatesUtil.getKafkaJointTemplate();
    }

    @Override
    public File getAvroSchemaFile() {
        return AvroFilesUtil.getAvroJointSchema();
    }

    @Override
    public void put(int i, Object v) {
        switch (i) {
            case 0:
                setConnector1((String) v);
                break;
            case 1:
                setConnector2((String) v);
                break;
            case 2:
                setLabel((String) v);
                break;
            default:
                throw new IllegalStateException(AVRO_INDEX_RECORD_PUT.getValue());
        }
    }

    @Override
    public Object get(int i) {
        switch (i) {
            case 0:
                return getConnector1();
            case 1:
                return getConnector2();
            case 2:
                return getLabel();
            default:
                throw new IllegalStateException(AVRO_INDEX_RECORD_GET.getValue());
        }
    }
}
