//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.22 at 11:20:22 PM BST 
//


package com.mei.ergosurgeon.load.data.entities;

import com.mei.ergosurgeon.load.business.api.KafkaLoadService;
import com.mei.ergosurgeon.load.business.utils.AvroFilesUtil;
import com.mei.ergosurgeon.load.business.utils.KafkaTemplatesUtil;
import com.mei.ergosurgeon.load.data.entities.custom.KafkaTopic;
import org.apache.avro.reflect.AvroIgnore;
import org.springframework.kafka.core.KafkaTemplate;

import javax.xml.bind.annotation.*;
import java.io.File;

import static com.mei.ergosurgeon.load.common.IlegalStateExceptionEnum.AVRO_INDEX_RECORD_GET;
import static com.mei.ergosurgeon.load.common.IlegalStateExceptionEnum.AVRO_INDEX_RECORD_PUT;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "mvnx")
public class Mvnx implements KafkaTopic<Mvnx> {

    @AvroIgnore
    @XmlElement(required = true)
    protected Mvn mvn;

    @XmlElement(required = true)
    protected String comment;

    @AvroIgnore
    @XmlElement(required = true)
    protected Subject subject;

    @AvroIgnore
    @XmlElement(required = true)
    protected SecurityCode securityCode;

    @XmlAttribute(name = "version", required = true)
    protected String version;

    public Mvn getMvn() {
        return mvn;
    }

    public void setMvn(Mvn value) {
        this.mvn = value;
    }

    public String getComment() {
        return comment;
    }

    public void setComment(String value) {
        this.comment = value;
    }

    public Subject getSubject() {
        return subject;
    }

    public void setSubject(Subject value) {
        this.subject = value;
    }

    public SecurityCode getSecurityCode() {
        return securityCode;
    }

    public void setSecurityCode(SecurityCode value) {
        this.securityCode = value;
    }

    public String getVersion() {
        return version;
    }

    public void setVersion(String value) {
        this.version = value;
    }

    public Mvnx process(KafkaLoadService proxy) throws Exception {

        proxy.send(this);
        getSubject().process(proxy);
        //send(this);
        return this;
    }

    @Override
    public String getTopic() {
        return "mvnx";
    }


    @Override
    public KafkaTemplate<Object, Mvnx> getKafkaTemplate() {
        return KafkaTemplatesUtil.getKafkaMvnxTemplate();
    }

    @Override
    public File getAvroSchemaFile() {
        return AvroFilesUtil.getAvroMvnxSchema();
    }

    @Override
    public void put(int i, Object v) {
        switch (i) {
            case 0:
                setComment((String) v);
                break;
            case 1:
                setVersion((String) v);
                break;
            default:
                throw new IllegalStateException(AVRO_INDEX_RECORD_PUT.getValue());
        }
    }

    @Override
    public Object get(int i) {
        switch (i) {
            case 0:
                return getComment();
            case 1:
                return getVersion();
            default:
                throw new IllegalStateException(AVRO_INDEX_RECORD_GET.getValue());
        }
    }
}
