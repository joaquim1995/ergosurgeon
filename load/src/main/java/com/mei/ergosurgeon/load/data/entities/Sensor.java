//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.22 at 11:20:22 PM BST 
//


package com.mei.ergosurgeon.load.data.entities;

import com.mei.ergosurgeon.load.business.api.KafkaLoadService;
import com.mei.ergosurgeon.load.business.utils.AvroFilesUtil;
import com.mei.ergosurgeon.load.business.utils.KafkaTemplatesUtil;
import com.mei.ergosurgeon.load.data.entities.custom.KafkaTopic;
import org.springframework.kafka.core.KafkaTemplate;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.File;

import static com.mei.ergosurgeon.load.common.IlegalStateExceptionEnum.AVRO_INDEX_RECORD_GET;
import static com.mei.ergosurgeon.load.common.IlegalStateExceptionEnum.AVRO_INDEX_RECORD_PUT;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "sensor")
public class Sensor implements KafkaTopic<Sensor> {

    @XmlAttribute(name = "label", required = true)
    protected String label;

    public String getLabel() {
        return label;
    }

    public void setLabel(String value) {
        this.label = value;
    }

    public Sensor process(KafkaLoadService proxy) throws Exception {

        proxy.send(this);
        return this;
    }

    @Override
    public String getTopic() {
        return "sensor";
    }


    @Override
    public KafkaTemplate<Object, Sensor> getKafkaTemplate() {
        return KafkaTemplatesUtil.getKafkaSensorTemplate();
    }

    @Override
    public File getAvroSchemaFile() {
        return AvroFilesUtil.getAvroSensorSchema();
    }

    @Override
    public void put(int i, Object v) {
        switch (i) {
            case 0:
                setLabel((String) v);
                break;
            default:
                throw new IllegalStateException(AVRO_INDEX_RECORD_PUT.getValue());
        }
    }

    @Override
    public Object get(int i) {
        switch (i) {
            case 0:
                return getLabel();
            default:
                throw new IllegalStateException(AVRO_INDEX_RECORD_GET.getValue());
        }
    }
}
